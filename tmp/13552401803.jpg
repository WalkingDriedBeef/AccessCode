iderH) {
			float valueH = jsliderH.getValue();
			imgW = (int)(2*PWIDTH*(valueH/JS_MAXIMUM));	
			if(imgW < PWIDTH/4) {
				imgW = PWIDTH/4;
			}
			dx1 = xcentre-imgW/2;
			dy1 = ycentre-imgH/2;
			dx2 = xcentre + imgW/2;
			dy2 = ycentre + imgH/2;
			canvas.repaint();
		} else if(e.getSource() == jsliderV) {
			float valueV = jsliderV.getValue();
			imgH = (int)(2*PHEIGHT*(valueV/JS_MAXIMUM));
			if(imgH < PHEIGHT/4) {
				imgH = PHEIGHT/4;
			}
			dx1 = xcentre-imgW/2;
			dy1 = ycentre-imgH/2;
			dx2 = xcentre + imgW/2;
			dy2 = ycentre + imgH/2;
			canvas.repaint();
		}
	}
	
	public static void main(String[] args) {
		new Histogram();
	}
	
	/**
	 * 用于画图像的Canvas
	 */
	class MyCanvas extends Canvas {		
		public MyCanvas() {
			
		}
		public void paint(Graphics g) {
			Graphics2D g2 = (Graphics2D) g;
			//g.drawImage(img, xcentre-imgW/2, ycentre-imgH/2, imgW, imgH, this);
			sx2  = img.getWidth(this);
			sy2  = img.getHeight(this);
			g2.shear(shx, shy);
			g2.drawImage(img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, this);//Color.green, 
		}
	}
			
}

/*class HistCanv